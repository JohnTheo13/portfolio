import React, { Component } from 'react'
import PropTypes from 'prop-types'
import Radium from 'radium'
import Button from '../Button'
import { Icon } from '../../index'
import theme from '../../theme'


const iconStyle = props => ({
  height: '30px',
  fill: props.hover ? theme.white : theme.green,
  float: 'left',
  ...props.iconStyle,
})

class InterfaceWithSvg extends Component {
  static propTypes = {
    icon: PropTypes.string.isRequired,
    onClick: PropTypes.func.isRequired,
    children: PropTypes.node.isRequired,
    size: PropTypes.string.isRequired,
    disabled: PropTypes.bool,
    style: PropTypes.object,
    iconStyle: PropTypes.object,
  }

  static defaultProps = { disabled: false, style: undefined, iconStyle: undefined }

  state = { hover: false }

  toggle = (val) => {
    this.setState({ hover: val })
  }

  render() {
    return (
      <div
        onMouseOver={() => this.toggle(true)}
        onMouseOut={() => this.toggle(false)}
        onFocus={() => this.toggle(true)}
        onBlur={() => this.toggle(false)}
      >
        <Button
          noMargin
          style={{ lineHeight: theme.whitespaceM, ...this.props.style }}
          size={this.props.size}
          tag="interface"
          onClick={this.props.disabled ? null : this.props.onClick}
          disabled={this.props.disabled}
        >
          <Icon
            iconStyle={this.props.iconStyle}
            name={this.props.icon}
            style={iconStyle}
            hover={!this.props.disabled && this.state.hover}
            viewBox="0 2.5 50 50"
          />
          {this.props.children}
        </Button>
      </div>
    )
  }
}

export default Radium(InterfaceWithSvg)
