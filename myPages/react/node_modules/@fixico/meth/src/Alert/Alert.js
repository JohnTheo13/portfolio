import React from 'react'
import PropTypes from 'prop-types'
import theme from '../theme'
import { P } from '../Typography'

const colors = (status) => {
  let style
  if (status === 'info') {
    style = {
      border: `${theme.info} 1px solid`,
      backgroundColor: theme.infoLight,
      color: theme.infoMedium,
    }
  }
  if (status === 'error') {
    style = {
      border: `${theme.error} 1px solid`,
      backgroundColor: theme.errorLight,
      color: theme.errorMedium,
    }
  }
  if (status === 'success') {
    style = {
      border: `${theme.success} 1px solid`,
      backgroundColor: theme.successLight,
      color: theme.successMedium,
    }
  }
  return style
}

const boxStyles = status => (
  {
    position: 'relative',
    borderRadius: theme.borderRadius,
    padding: theme.whitespaceXs,
    fontSize: theme.fontSizesS,
    marginBottom: theme.whitespaceS,
    ...colors(status),
  }
)

const messageStyle = status => (
  {
    ...colors(status),
    border: 'none',
    marginRight: '5px',
    marginBottom: '0px',
  }
)

const iconStyle = {
  width: '20px', float: 'left', marginTop: '2px', marginRight: theme.whitespaceXs,
}

const Alert = (props) => {
  const { status } = props
  return (
    <div style={{ ...boxStyles(status), ...props.style }}>
      <span>
        <img alt="small feedback icon" src={`https://website-assets.imgix.net/icon/circle_${status}.svg`} style={iconStyle} />
      </span>
      {props.header &&
        <P
          small
          bold
          style={{
            ...messageStyle(status),
            display: 'inline-block',
          }}
        >
          {props.header}
        </P>
      }
      {props.body &&
        <P
          small
          style={{
            ...messageStyle(status),
            display: 'inline',
          }}
        >
          {props.body}
        </P>
      }
      {props.children &&
        <P small style={messageStyle(status)}>{props.children}</P>
      }
    </div>
  )
}

Alert.defaultProps = {
  body: undefined,
  header: undefined,
  children: undefined,
  style: {},
}

Alert.propTypes = {
  body: PropTypes.string,
  header: PropTypes.string,
  children: PropTypes.node,
  status: PropTypes.string.isRequired,
  style: PropTypes.object,
}
export default Alert
